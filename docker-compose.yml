# Configuration optimisée pour développement local
# Seuls PostgreSQL et pgAdmin sont dans Docker
# L'app Next.js tourne en local avec npm run dev

services:
  postgres:
    image: postgres:15-alpine
    platform: linux/amd64
    container_name: betterads_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: betterads_db
      POSTGRES_USER: betterads_user
      POSTGRES_PASSWORD: betterads_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U betterads_user -d betterads_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: betterads_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@betterads.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

  # Service app commenté - utilisé uniquement pour la production
  # Décommentez si vous voulez tester le build Docker complet
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: betterads_app
  #   restart: unless-stopped
  #   ports:
  #     - "3001:3000"
  #   environment:
  #     - NODE_ENV=production
  #     - DATABASE_URL=postgresql://betterads_user:betterads_password@postgres:5432/betterads_db?schema=public
  #     - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
  #     - BETTER_AUTH_URL=${BETTER_AUTH_URL:-http://localhost:3001}
  #     - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
  #     - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
  #     - NEXT_TELEMETRY_DISABLED=1
  #   depends_on:
  #     postgres:
  #       condition: service_healthy

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local